var figlet=require("figlet");var GameMode=require("../gamemodes");var Logger=require("./Logger");var Entity=require("../entity");function Commands(){this.list={}}module.exports=Commands;var fillChar=function(data,char,fieldLength,rTL){var result=data.toString();if(rTL===true)for(var i=result.length;i<fieldLength;i++)result=char.concat(result);else for(var i=result.length;i<fieldLength;i++)result=result.concat(char);return result};
Commands.list={help:function(gameServer,split){Logger.print("                       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                       \n"+"                       \u2502 LIST OF AVAILABLE COMMANDS \u2502                       \n"+"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n"+
"\u2502                         ----Players and AI----                           \u2502\n"+"\u2502                                                                          \u2502\n"+"\u2502 playerlist                   \u2502 Get list of players, bots, ID's, etc      \u2502\n"+"\u2502 minion [PlayerID] [#] [name] \u2502 Adds suicide minions to the server        \u2502\n"+"\u2502 addbot [number]              \u2502 Adds bots to the server                   \u2502\n"+"\u2502 kickbot [number]             \u2502 Kick a number of bots - No value= all gone\u2502\n"+
"\u2502 kick [PlayerID]              \u2502 Kick player or bot by client ID           \u2502\n"+"\u2502 kickall                      \u2502 Kick all players and bots                 \u2502\n"+"\u2502 kill [PlayerID]              \u2502 Kill the player by client ID              \u2502\n"+"\u2502 killall                      \u2502 Kills everyone                            \u2502\n"+"\u2502                                                                          \u2502\n"+"\u2502                          ----Player Commands----                         \u2502\n"+
"\u2502                                                                          \u2502\n"+"\u2502 spawn [entity] [pos] [mass]  \u2502 Spawns an entity                          \u2502\n"+"\u2502 mass [PlayerID] [mass]       \u2502 Set cell(s) mass by client ID             \u2502\n"+"\u2502 merge [PlayerID]             \u2502 Merge all client's cells                  \u2502\n"+"\u2502 spawnmass [PlayerID] [mass]  \u2502 Sets a player's spawn mass                \u2502\n"+"\u2502 freeze [PlayerID]            \u2502 Freezes a player                          \u2502\n"+
"\u2502 speed [PlayerID]             \u2502 Sets a player's base speed                \u2502\n"+"\u2502 color [PlayerID] [R] [G] [B] \u2502 Set cell(s) color by client ID            \u2502\n"+"\u2502 name [PlayerID] [name]       \u2502 Change cell(s) name by client ID          \u2502\n"+"\u2502 skin [PlayerID] [string]     \u2502 Change cell(s) skin by client ID          \u2502\n"+"\u2502 rec [PlayerID]               \u2502 Gives a player instant-recombine + more   \u2502\n"+"\u2502 split [PlayerID] [Amount]    \u2502 Forces a player to split                  \u2502\n"+
"\u2502 tp [X] [Y]                   \u2502 Teleports player(s) to XY coordinates     \u2502\n"+"\u2502 replace [PlayerID] [entity]  \u2502 Replaces a player with an entity          \u2502\n"+"\u2502 pop [PlayerID]               \u2502 Pops a player with a virus                \u2502\n"+"| explode [PlayerID]           | Explodes a player into ejected mass       |\n"+"\u2502                                                                          \u2502\n"+"\u2502                          ----Server Commands----                         \u2502\n"+
"\u2502                                                                          \u2502\n"+"\u2502 pause                        \u2502 Pause game, freeze all nodes              \u2502\n"+"\u2502 board [string] [string] ...  \u2502 Set scoreboard text                       \u2502\n"+"\u2502 change [setting] [value]     \u2502 Change specified settings                 \u2502\n"+"\u2502 reload                       \u2502 Reload config, banlist, and role files    \u2502\n"+"\u2502 ban [PlayerID \u2502 IP]          \u2502 Bans a player(s) IP                       \u2502\n"+
"\u2502 unban [IP]                   \u2502 Unbans an IP                              \u2502\n"+"\u2502 banlist                      \u2502 Get list of banned IPs.                   \u2502\n"+"\u2502 mute [PlayerID]              \u2502 Mute player from chat by client ID        \u2502\n"+"\u2502 unmute [PlayerID]            \u2502 Unmute player from chat by client ID      \u2502\n"+"| lms                          | Starts/ends last man standing             |\n"+"| chat                         | Sends a server message to all clients     |\n"+
"\u2502                                                                          \u2502\n"+"\u2502                          ----Miscellaneous----                           \u2502\n"+"\u2502                                                                          \u2502\n"+"\u2502 clear                        \u2502 Clear console output                      \u2502\n"+"\u2502 reset                        \u2502 Removes all nodes and reimplement them    \u2502\n"+"\u2502 status                       \u2502 Get server status                         \u2502\n"+
"\u2502 debug                        \u2502 Get/check node lengths                    \u2502\n"+"\u2502 exit                         \u2502 Stops the server                          \u2502\n"+"\u2502 calc                         \u2502 Get size/mass from a specified value      \u2502\n"+"\u2502                                                                          \u2502\n"+"\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n"+
'\u2502         Psst! Do "shortcuts" for a list of command shortcuts!            \u2502\n'+"\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518")},
shortcuts:function(gameServer,split){Logger.print("                       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                       \n"+"                       \u2502 LIST OF COMMAND SHORTCUTS  \u2502                       \n"+"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n"+
"\u2502 st                          \u2502 Alias for status of server                 \u2502\n"+"\u2502 pl                          \u2502 Alias for playerlist                       \u2502\n"+"\u2502 m                           \u2502 Alias for mass                             \u2502\n"+"\u2502 sm                          \u2502 Alias for spawnmass                        \u2502\n"+"\u2502 ka                          \u2502 Alias for killall                          \u2502\n"+"\u2502 k                           \u2502 Alias for kill                             \u2502\n"+
"\u2502 mg                          \u2502 Alias for merge                            \u2502\n"+"\u2502 s                           \u2502 Alias for speed                            \u2502\n"+"\u2502 mn                          \u2502 Alias for minion                           \u2502\n"+"\u2502 f                           \u2502 Alias for freeze                           \u2502\n"+"\u2502 ab                          \u2502 Alias for addbot                           \u2502\n"+"\u2502 kb                          \u2502 Alias for kickbot                          \u2502\n"+
"\u2502 c                           \u2502 Alias for change                           \u2502\n"+"\u2502 n                           \u2502 Alias for name                             \u2502\n"+"\u2502 rep                         \u2502 Alias for replace                          \u2502\n"+"| e                           | Alias for explode                          |\n"+"\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518")},
chat:function(gameServer,split){for(var i=0;i<gameServer.clients.length;i++)gameServer.sendChatMessage(null,i,String(split.slice(1,split.length).join(" ")))},debug:function(gameServer,split){var clientCells=0;for(var i in gameServer.clients)clientCells+=gameServer.clients[i].playerTracker.cells.length;Logger.print("Clients:        "+fillChar(gameServer.clients.length," ",4,true)+" / "+gameServer.config.serverMaxConnections+" + bots"+"\n"+"Total nodes:"+fillChar(gameServer.nodes.length," ",8,true)+
"\n"+"- Client cells: "+fillChar(clientCells," ",4,true)+" / "+gameServer.clients.length*gameServer.config.playerMaxCells+"\n"+"- Ejected cells:"+fillChar(gameServer.nodesEjected.length," ",4,true)+"\n"+"- Food:        "+fillChar(gameServer.nodesFood.length," ",4,true)+" / "+gameServer.config.foodMaxAmount+"\n"+"- Viruses:      "+fillChar(gameServer.nodesVirus.length," ",4,true)+" / "+gameServer.config.virusMaxAmount+"\n"+"Moving nodes:   "+fillChar(gameServer.movingNodes.length," ",4,true)+"\n"+
"Quad nodes:     "+fillChar(scanNodeCount(gameServer.quadTree)," ",4,true)+"\n"+"Quad items:     "+fillChar(scanItemCount(gameServer.quadTree)," ",4,true))},reset:function(gameServer,split){var ent=split[1];if(ent!="ejected"&&ent!="food"&&ent!="virus"){Logger.warn("Removed "+gameServer.nodes.length+" nodes");for(;gameServer.nodes.length;)gameServer.removeNode(gameServer.nodes[0])}if(ent=="ejected"){Logger.print("Removed "+gameServer.nodesEjected.length+" ejected nodes");for(;gameServer.nodesEjected.length;)gameServer.removeNode(gameServer.nodesEjected[0])}if(ent==
"food"){Logger.print("Removed "+gameServer.nodesFood.length+" food nodes");for(;gameServer.nodesFood.length;)gameServer.removeNode(gameServer.nodesFood[0])}if(ent=="virus"){Logger.print("Removed "+gameServer.nodesVirus.length+" virus nodes");for(;gameServer.nodesVirus.length;)gameServer.removeNode(gameServer.nodesVirus[0])}},minion:function(gameServer,split){var id=parseInt(split[1]);var add=parseInt(split[2]);var name=split.slice(3,split.length).join(" ");if(isNaN(id)){Logger.warn("Please specify a valid player id!");
return}for(var i in gameServer.clients){var client=gameServer.clients[i].playerTracker;if(client.pID==id){if(client.isMi){Logger.warn("You cannot give minions to a minion!");return}if(client.minionControl===true&&isNaN(add)){client.minionControl=false;client.miQ=0;Logger.print("Successfully removed minions for "+getName(client._name))}else{client.minionControl=true;if(isNaN(add))add=1;for(var i=0;i<add;i++)gameServer.bots.addMinion(client,name);Logger.print("Added "+add+" minions for "+getName(client._name))}break}}},
addbot:function(gameServer,split){var add=parseInt(split[1]);if(isNaN(add))add=1;for(var i=0;i<add;i++)gameServer.bots.addBot();Logger.print("Added "+add+" player bots")},ban:function(gameServer,split){var logInvalid="Please specify a valid player ID or IP address!";if(split[1]===null||typeof split[1]=="undefined"){Logger.warn(logInvalid);return}if(split[1].indexOf(".")>=0){var ip=split[1];var ipParts=ip.split(".");for(var i in ipParts){if(i>1&&ipParts[i]=="*")continue;if(isNaN(ipParts[i])||ipParts[i]<
0||ipParts[i]>=256){Logger.warn(logInvalid);return}}ban(gameServer,split,ip);return}var id=parseInt(split[1]);if(isNaN(id)){Logger.warn(logInvalid);return}var ip=null;for(var i in gameServer.clients){var client=gameServer.clients[i];if(!client||!client.isConnected)continue;if(client.playerTracker.pID==id){ip=client._socket.remoteAddress;break}}if(ip)ban(gameServer,split,ip);else Logger.warn("Player ID "+id+" not found!")},banlist:function(gameServer,split){Logger.print("Showing "+gameServer.ipBanList.length+
" banned IPs: ");Logger.print(" IP              | IP ");Logger.print("\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500");for(var i=0;i<gameServer.ipBanList.length;i+=2)Logger.print(" "+fillChar(gameServer.ipBanList[i]," ",15)+" | "+(gameServer.ipBanList.length===i+1?"":gameServer.ipBanList[i+1]))},kickbot:function(gameServer,split){var toRemove=
parseInt(split[1]);if(isNaN(toRemove))toRemove=gameServer.clients.length;var removed=0;for(var i=0;i<gameServer.clients.length;i++){if(gameServer.clients[i].isConnected!=null)continue;gameServer.clients[i].close();removed++;if(removed>=toRemove)break}if(!removed)Logger.warn("Cannot find any bots");else if(toRemove==removed)Logger.warn("Kicked "+removed+" bots");else Logger.warn("Only "+removed+" bots were kicked")},board:function(gameServer,split){var newLB=[];var reset=split[1];for(var i=1;i<split.length;i++)if(split[i])newLB[i-
1]=split[i];else newLB[i-1]=" ";gameServer.gameMode.packetLB=48;gameServer.gameMode.specByLeaderboard=false;gameServer.gameMode.updateLB=function(gameServer){gameServer.leaderboard=newLB;gameServer.leaderboardType=48};if(reset!="reset"){Logger.print("Successfully changed leaderboard values");Logger.print('Do "board reset" to reset leaderboard')}else{var gm=GameMode.get(gameServer.gameMode.ID);gameServer.gameMode.packetLB=gm.packetLB;gameServer.gameMode.updateLB=gm.updateLB;Logger.print("Successfully reset leaderboard")}},
change:function(gameServer,split){if(split.length<3){Logger.warn("Invalid command arguments");return}var key=split[1];var value=split[2];if(value.indexOf(".")!=-1)value=parseFloat(value);else value=parseInt(value);if(value==null||isNaN(value)){Logger.warn("Invalid value: "+value);return}if(!gameServer.config.hasOwnProperty(key)){Logger.warn("Unknown config value: "+key);return}gameServer.config[key]=value;gameServer.config.playerMinSize=Math.max(32,gameServer.config.playerMinSize);Logger.setVerbosity(gameServer.config.logVerbosity);
Logger.setFileVerbosity(gameServer.config.logFileVerbosity);Logger.print("Set "+key+" = "+gameServer.config[key])},clear:function(gameServer){process.stdout.write("\u001b[2J\u001b[0;0H");figlet("MultiOgar-Edited  "+gameServer.version,function(err,data){if(err){console.log("Something went wrong...");console.dir(err);return}console.log(data)});Logger.info("\u001b[1m\u001b[32mMultiOgar-Edited "+gameServer.version+"\u001b[37m - An open source multi-protocol ogar server\u001b[0m");Logger.info("Listening on port "+
gameServer.config.serverPort);Logger.info("Current game mode is "+gameServer.gameMode.name+"\n")},color:function(gameServer,split){var id=parseInt(split[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}var color={r:0,g:0,b:0};color.r=Math.max(Math.min(parseInt(split[2]),255),0);color.g=Math.max(Math.min(parseInt(split[3]),255),0);color.b=Math.max(Math.min(parseInt(split[4]),255),0);for(var i in gameServer.clients)if(gameServer.clients[i].playerTracker.pID==id){var client=
gameServer.clients[i].playerTracker;if(!client.cells.length)return Logger.warn("That player is either dead or not playing!");client.color=color;for(var j in client.cells)client.cells[j].color=color;break}if(client==null)return void Logger.warn("That player ID is non-existant!");Logger.print("Changed "+getName(client._name)+"'s color to: "+color.r+", "+color.g+", "+color.b)},exit:function(gameServer,split){Logger.warn("Closing server...");gameServer.wsServer.close();process.exit(1)},restart:function(gameServer){var QuadNode=
require("./QuadNode.js");Logger.warn("Restarting server...");gameServer.httpServer=null;gameServer.wsServer=null;gameServer.run=true;gameServer.lastNodeId=1;gameServer.lastPlayerId=1;for(var i=0;i<gameServer.clients.length;i++){var client=gameServer.clients[i];client.close()}gameServer.nodes=[];gameServer.nodesVirus=[];gameServer.nodesFood=[];gameServer.nodesEjected=[];gameServer.nodesPlayer=[];gameServer.movingNodes=[];gameServer.commands;gameServer.tickCounter=0;gameServer.startTime=Date.now();
gameServer.setBorder(gameServer.config.borderWidth,gameServer.config.borderHeight);gameServer.quadTree=new QuadNode(gameServer.border,64,32)},kick:function(gameServer,split){var id=parseInt(split[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}var count=0;gameServer.clients.forEach(function(socket){if(socket.isConnected===false)return;if(id!==0&&socket.playerTracker.pID!=id)return;Commands.list.kill(gameServer,split);socket.close(1E3,"Kicked from server");var name=getName(socket.playerTracker._name);
Logger.print('Kicked "'+name+'"');gameServer.sendChatMessage(null,null,'Kicked "'+name+'"');count++},this);if(count)return;if(!id)Logger.warn("No players to kick!");else Logger.warn("That player ID ("+id+") is non-existant!")},mute:function(gameServer,args){if(!args||args.length<2){Logger.warn("Please specify a valid player ID!");return}var id=parseInt(args[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}var player=playerById(id,gameServer);if(!player){Logger.warn("That player ID ("+
id+") is non-existant!");return}if(player.isMuted){Logger.warn("That player with ID ("+id+") is already muted!");return}Logger.print('Player "'+getName(player._name)+'" was muted');player.isMuted=true},unmute:function(gameServer,args){if(!args||args.length<2){Logger.warn("Please specify a valid player ID!");return}var id=parseInt(args[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}var player=playerById(id,gameServer);if(player===null){Logger.warn("That player ID ("+id+") is non-existant!");
return}if(!player.isMuted){Logger.warn("Player with id="+id+" already not muted!");return}Logger.print('Player "'+getName(player._name)+'" was unmuted');player.isMuted=false},kickall:function(gameServer,split){this.id=0;var count=0;gameServer.clients.forEach(function(socket){if(socket.isConnected===false)return;if(this.id!=0&&socket.playerTracker.pID!=this.id)return;Commands.list.killall(gameServer,split);socket.close(1E3,"Kicked from server.");var name=getName(socket.playerTracker._name);Logger.print('Kicked "'+
name+'"');gameServer.sendChatMessage(null,null,'Kicked "'+name+'"');count++},this);if(count)return;if(!this.id)Logger.warn("No players to kick!");else Logger.warn("That player ID ("+this.id+") is non-existant!")},kill:function(gameServer,split){var id=parseInt(split[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}var count=0;for(var i in gameServer.clients)if(gameServer.clients[i].playerTracker.pID==id){var client=gameServer.clients[i].playerTracker;var len=client.cells.length;
for(var j=0;j<len;j++){gameServer.removeNode(client.cells[0]);count++}Logger.print("Killed "+getName(client._name)+" and removed "+count+" cells");break}if(client==null)return void Logger.warn("That player ID is non-existant!")},killall:function(gameServer,split){var count=0;for(var i=0;i<gameServer.clients.length;i++){var playerTracker=gameServer.clients[i].playerTracker;while(playerTracker.cells.length>0){gameServer.removeNode(playerTracker.cells[0]);count++}}if(this.id)Logger.print("Removed "+
count+" cells")},mass:function(gameServer,split){Logger.warn("Stop it, boss. Check the cafe!");return},spawnmass:function(gameServer,split){Logger.warn("Stop it, boss. Check the cafe!");return},speed:function(gameServer,split){Logger.warn("Stop it, boss. Check the cafe!");return},merge:function(gameServer,split){var id=parseInt(split[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}for(var i=0;i<gameServer.clients.length;i++)if(id==gameServer.clients[i].playerTracker.pID){var client=
gameServer.clients[i].playerTracker;if(!client.cells.length)return Logger.warn("That player is either dead or not playing!");if(client.cells.length==1)return Logger.warn("Client already has one cell!");client.mergeOverride=!client.mergeOverride;if(client.mergeOverride)Logger.print(getName(client._name)+" is now force merging");else Logger.print(getName(client._name)+" isn't force merging anymore")}if(client==null)return void Logger.warn("That player ID is non-existant!")},rec:function(gameServer,
split){var id=parseInt(split[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}for(var i in gameServer.clients)if(gameServer.clients[i].playerTracker.pID==id){var client=gameServer.clients[i].playerTracker;client.rec=!client.rec;if(client.rec)Logger.print(getName(client._name)+" is now in rec mode!");else Logger.print(getName(client._name)+" is no longer in rec mode")}if(client==null)return void Logger.warn("That player ID is non-existant!")},split:function(gameServer,split){var id=
parseInt(split[1]);var count=parseInt(split[2]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}if(isNaN(count)){Logger.print("Split player 4 times");count=4}if(count>gameServer.config.playerMaxCells){Logger.print("Split player to playerMaxCells");count=gameServer.config.playerMaxCells}for(var i in gameServer.clients)if(gameServer.clients[i].playerTracker.pID==id){var client=gameServer.clients[i].playerTracker;if(!client.cells.length)return Logger.warn("That player is either dead or not playing!");
for(var i=0;i<count;i++)gameServer.splitCells(client);Logger.print("Forced "+getName(client._name)+" to split "+count+" times");break}if(client==null)return void Logger.warn("That player ID is non-existant!")},name:function(gameServer,split){var id=parseInt(split[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}var name=split.slice(2,split.length).join(" ");if(typeof name=="undefined"){Logger.warn("Please type a valid name");return}for(var i=0;i<gameServer.clients.length;i++){var client=
gameServer.clients[i].playerTracker;if(!client.cells.length)return Logger.warn("That player is either dead or not playing!");if(client.pID==id){Logger.print("Changing "+getName(client._name)+" to "+name);client.setName(name);return}}Logger.warn("That player ID ("+id+") is non-existant!")},skin:function(gameServer,args){if(!args||args.length<3){Logger.warn("Please specify a valid player ID and skin name!");return}var id=parseInt(args[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");
return}var skin=args[2].trim();if(!skin)Logger.warn("Please specify skin name!");var player=playerById(id,gameServer);if(!player){Logger.warn("That player ID ("+id+") is non-existant!");return}if(player.cells.length)Logger.warn("Player is alive, skin will not be applied to existing cells!");Logger.print('Player "'+getName(player._name)+"\"'s skin is changed to "+skin);player.setSkin(skin)},unban:function(gameServer,split){if(split.length<2||!split[1]||split[1].trim().length<1){Logger.warn("Please specify a valid IP!");
return}var ip=split[1].trim();var index=gameServer.ipBanList.indexOf(ip);if(index<0){Logger.warn("IP "+ip+" is not in the ban list!");return}gameServer.ipBanList.splice(index,1);saveIpBanList(gameServer);Logger.print("Unbanned IP: "+ip)},playerlist:function(gameServer,split){if(!gameServer.clients.length)return Logger.warn("No bots or players are currently connected to the server!");Logger.print("\nCurrent players: "+gameServer.clients.length);Logger.print('Do "playerlist m" or "pl m" to list minions\n');
Logger.print(" ID     | IP              | P | CELLS | SCORE  |   POSITION   | "+fillChar("NICK"," ",gameServer.config.playerMaxNickLength)+" ");Logger.print(fillChar("","\u2500"," ID     | IP              | CELLS | SCORE  |   POSITION   |   |  ".length+gameServer.config.playerMaxNickLength));var sockets=gameServer.clients.slice(0);sockets.sort(function(a,b){return a.playerTracker.pID-b.playerTracker.pID});for(var i=0;i<sockets.length;i++){var socket=sockets[i];var client=socket.playerTracker;var type=
split[1];var id=fillChar(client.pID," ",6,true);var ip=client.isMi?"[MINION]":"[BOT]";if(socket.isConnected&&!client.isMi)ip=socket.remoteAddress;else if(client.isMi&&type!="m")continue;ip=fillChar(ip," ",15);var protocol=gameServer.clients[i].packetHandler.protocol;if(!protocol)protocol="?";var nick="",cells="",score="",position="",data="";if(socket.closeReason!=null){var reason="[DISCONNECTED] ";if(socket.closeReason.code)reason+="["+socket.closeReason.code+"] ";if(socket.closeReason.message)reason+=
socket.closeReason.message;Logger.print(" "+id+" | "+ip+" | "+protocol+" | "+reason)}else if(!socket.packetHandler.protocol&&socket.isConnected&&!client.isMi)Logger.print(" "+id+" | "+ip+" | "+protocol+" | "+"[CONNECTING]");else if(client.spectate){nick="in free-roam";if(!client.freeRoam){var target=client.getSpecTarget();if(target)nick=getName(target._name)}data=fillChar("SPECTATING: "+nick,"-"," | CELLS | SCORE  | POSITION    ".length+gameServer.config.playerMaxNickLength,true);Logger.print(" "+
id+" | "+ip+" | "+protocol+" | "+data)}else if(client.cells.length){nick=fillChar(getName(client._name)," ",gameServer.config.playerMaxNickLength);cells=fillChar(client.cells.length," ",5,true);score=fillChar(getScore(client)>>0," ",6,true);position=fillChar(getPos(client).x>>0," ",5,true)+", "+fillChar(getPos(client).y>>0," ",5,true);Logger.print(" "+id+" | "+ip+" | "+protocol+" | "+cells+" | "+score+" | "+position+" | "+nick)}else{data=fillChar("DEAD OR NOT PLAYING","-"," | CELLS | SCORE  | POSITION    ".length+
gameServer.config.playerMaxNickLength,true);Logger.print(" "+id+" | "+ip+" | "+protocol+" | "+data)}}},pause:function(gameServer,split){gameServer.run=!gameServer.run;var s=gameServer.run?"Unpaused":"Paused";Logger.print(s+" the game.")},freeze:function(gameServer,split){var id=parseInt(split[1]);if(isNaN(id)){Logger.print("Please specify a valid player ID!");return}for(var i in gameServer.clients)if(gameServer.clients[i].playerTracker.pID==id){var client=gameServer.clients[i].playerTracker;if(!client.cells.length)return Logger.warn("That player is either dead or not playing!");
client.frozen=!client.frozen;if(client.frozen)Logger.print("Froze "+getName(client._name));else Logger.print("Unfroze "+getName(client._name))}if(client==null)return void Logger.warn("That player ID is non-existant!")},reload:function(gameServer,split){gameServer.loadFiles();Logger.print("Reloaded files successfully")},status:function(gameServer,split){var ini=require("./ini.js");var humans=0,bots=0;for(var i=0;i<gameServer.clients.length;i++)if("_socket"in gameServer.clients[i])humans++;else bots++;
var scores=[];for(var i in gameServer.clients)scores.push(getScore(gameServer.clients[i].playerTracker));if(!gameServer.clients.length)scores=[0];Logger.print("Connected players: "+gameServer.clients.length+"/"+gameServer.config.serverMaxConnections);Logger.print("Players: "+humans+" - Bots: "+bots);Logger.print("Average score: "+(scores.reduce(function(x,y){return x+y})/scores.length).toFixed(2));Logger.print("Server has been running for a total of"+Math.floor(process.uptime()/60)+" minutes");Logger.print("Current memory usage: "+
Math.round(process.memoryUsage().heapUsed/1048576*10)/10+"/"+Math.round(process.memoryUsage().heapTotal/1048576*10)/10+" mb");Logger.print("Current game mode: "+gameServer.gameMode.name);Logger.print("Current update time: "+gameServer.updateTimeAvg.toFixed(3)+" [ms]  ("+ini.getLagMessage(gameServer.updateTimeAvg)+")")},tp:function(gameServer,split){var id=parseInt(split[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}var pos={x:parseInt(split[2]),y:parseInt(split[3])};if(isNaN(pos.x)||
isNaN(pos.y)){Logger.warn("Invalid coordinates");return}for(var i in gameServer.clients)if(gameServer.clients[i].playerTracker.pID==id){var client=gameServer.clients[i].playerTracker;if(!client.cells.length)return Logger.warn("That player is either dead or not playing!");for(var j in client.cells){client.cells[j].position.x=pos.x;client.cells[j].position.y=pos.y;gameServer.updateNodeQuad(client.cells[j])}Logger.print("Teleported "+getName(client._name)+" to ("+pos.x+" , "+pos.y+")");break}if(client==
null)return void Logger.warn("That player ID is non-existant!")},spawn:function(gameServer,split){var ent=split[1];if(ent!="virus"&&ent!="food"&&ent!="mothercell"){Logger.warn("Please specify either virus, food, or mothercell");return}var pos={x:parseInt(split[2]),y:parseInt(split[3])};var mass=parseInt(split[4]);if(isNaN(pos.x)||isNaN(pos.y)){Logger.warn("Invalid coordinates");return}if(ent=="virus")var size=gameServer.config.virusMinSize;else if(ent=="mothercell")size=gameServer.config.virusMinSize*
2.5;else if(ent=="food")size=gameServer.config.foodMinMass;if(!isNaN(mass))size=Math.sqrt(mass*100);if(ent=="virus"){var virus=new Entity.Virus(gameServer,null,pos,size);gameServer.addNode(virus);Logger.print("Spawned 1 virus at ("+pos.x+" , "+pos.y+")")}else if(ent=="food"){var food=new Entity.Food(gameServer,null,pos,size);food.color=gameServer.getRandomColor();gameServer.addNode(food);Logger.print("Spawned 1 food cell at ("+pos.x+" , "+pos.y+")")}else if(ent=="mothercell"){var mother=new Entity.MotherCell(gameServer,
null,pos,size);gameServer.addNode(mother);Logger.print("Spawned 1 mothercell at ("+pos.x+" , "+pos.y+")")}},replace:function(gameServer,split){var id=parseInt(split[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}var ent=split[2];if(ent!="virus"&&ent!="food"&&ent!="mothercell"){Logger.warn("Please specify either virus, food, or mothercell");return}for(var i in gameServer.clients)if(gameServer.clients[i].playerTracker.pID==id){var client=gameServer.clients[i].playerTracker;
if(!client.cells.length)return Logger.warn("That player is either dead or not playing!");while(client.cells.length>0){var cell=client.cells[0];gameServer.removeNode(cell);if(ent=="virus"){var virus=new Entity.Virus(gameServer,null,cell.position,cell._size);gameServer.addNode(virus)}else if(ent=="food"){var food=new Entity.Food(gameServer,null,cell.position,cell._size);food.color=gameServer.getRandomColor();gameServer.addNode(food)}else if(ent=="mothercell"){var mother=new Entity.MotherCell(gameServer,
null,cell.position,cell._size);gameServer.addNode(mother)}}}if(ent=="virus")Logger.print("Replaced "+getName(client._name)+" with a virus");else if(ent=="food")Logger.print("Replaced "+getName(client._name)+" with a food cell");else if(ent=="mothercell")Logger.print("Replaced "+getName(client._name)+" with a mothercell");if(client==null)return void Logger.warn("That player ID is non-existant!")},pop:function(gameServer,split){var id=parseInt(split[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");
return}for(var i in gameServer.clients)if(gameServer.clients[i].playerTracker.pID==id){var client=gameServer.clients[i].playerTracker;if(!client.cells.length)return Logger.warn("That player is either dead or not playing!");var virus=new Entity.Virus(gameServer,null,client.centerPos,gameServer.config.virusMinSize);gameServer.addNode(virus);Logger.print("Popped "+getName(client._name))}if(client==null)return void Logger.warn("That player ID is non-existant!")},explode:function(gameServer,split){var id=
parseInt(split[1]);if(isNaN(id)){Logger.warn("Please specify a valid player ID!");return}for(var i in gameServer.clients)if(gameServer.clients[i].playerTracker.pID==id){var client=gameServer.clients[i].playerTracker;for(var i=0;i<client.cells.length;i++){var cell=client.cells[i];while(cell._size>gameServer.config.playerMinSize){var angle=6.28*Math.random();var loss=gameServer.config.ejectSizeLoss;var size=cell.radius-loss*loss;cell.setSize(Math.sqrt(size));var pos={x:cell.position.x+angle,y:cell.position.y+
angle};var ejected=new Entity.EjectedMass(gameServer,null,pos,gameServer.config.ejectSize);ejected.color=cell.color;ejected.setBoost(gameServer.config.ejectVelocity*Math.random(),angle);gameServer.addNode(ejected)}cell.setSize(gameServer.config.playerMinSize)}if(!client.cells.length)return Logger.warn("That player is either dead or not playing!");Logger.print("Successfully exploded "+getName(client._name))}if(client==null)return void Logger.warn("That player ID is non-existant!")},lms:function(gameServer,
split){gameServer.disableSpawn=!gameServer.disableSpawn;var s=gameServer.disableSpawn?"Started":"Ended";Logger.print(s+" last man standing")},calc:function(gameServer,split){var num=parseInt(split[1]);if(isNaN(num)){Logger.warn("Please specify a valid number!");return}var to=split[2];if(to!="toMass"&&to!="toSize"){Logger.warn('Please specify either "toMass" or "toSize"');return}if(to=="toMass")Logger.print("The specified size is "+num*num/100+" in mass");else Logger.print("The specified mass is "+
Math.sqrt(num*100).toFixed(2)+" in size")},st:function(gameServer,split){Commands.list.status(gameServer,split)},pl:function(gameServer,split){Commands.list.playerlist(gameServer,split)},m:function(gameServer,split){Commands.list.mass(gameServer,split)},mn:function(gameServer,split){Commands.list.minion(gameServer,split)},sm:function(gameServer,split){Commands.list.spawnmass(gameServer,split)},ka:function(gameServer,split){Commands.list.killall(gameServer,split)},k:function(gameServer,split){Commands.list.kill(gameServer,
split)},mg:function(gameServer,split){Commands.list.merge(gameServer,split)},s:function(gameServer,split){Commands.list.speed(gameServer,split)},f:function(gameServer,split){Commands.list.freeze(gameServer,split)},ab:function(gameServer,split){Commands.list.addbot(gameServer,split)},kb:function(gameServer,split){Commands.list.kickbot(gameServer,split)},c:function(gameServer,split){Commands.list.change(gameServer,split)},n:function(gameServer,split){Commands.list.name(gameServer,split)},rep:function(gameServer,
split){Commands.list.replace(gameServer,split)},e:function(gameServer,split){Commands.list.explode(gameServer,split)}};function playerById(id,gameServer){if(!id)return null;for(var i=0;i<gameServer.clients.length;i++){var playerTracker=gameServer.clients[i].playerTracker;if(playerTracker.pID==id)return playerTracker}return null}
function saveIpBanList(gameServer){var fs=require("fs");try{var blFile=fs.createWriteStream("../src/ipbanlist.txt");gameServer.ipBanList.sort().forEach(function(v){blFile.write(v+"\n")});blFile.end();Logger.info(gameServer.ipBanList.length+" IP ban records saved.")}catch(err){Logger.error(err.stack);Logger.error("Failed to save "+"../src/ipbanlist.txt"+": "+err.message)}}
function ban(gameServer,split,ip){var ipBin=ip.split(".");if(ipBin.length!=4){Logger.warn("Invalid IP format: "+ip);return}gameServer.ipBanList.push(ip);if(ipBin[2]=="*"||ipBin[3]=="*")Logger.print("The IP sub-net "+ip+" has been banned");else Logger.print("The IP "+ip+" has been banned");gameServer.clients.forEach(function(socket){if(!socket||!socket.isConnected||!gameServer.checkIpBan(ip)||socket.remoteAddress!=ip)return;Commands.list.kill(gameServer,split);socket.close(null,"Banned from server");
var name=getName(socket.playerTracker._name);Logger.print('Banned: "'+name+'" with Player ID '+socket.playerTracker.pID);gameServer.sendChatMessage(null,null,'Banned "'+name+'"')},gameServer);saveIpBanList(gameServer)}function getName(name){if(!name.length)name="An unnamed cell";return name.trim()}function getScore(client){var score=0;for(var i=0;i<client.cells.length;i++){if(!client.cells[i])continue;score+=client.cells[i]._mass}return score}
function getPos(client){for(var i=0;i<client.cells.length;i++){if(!client.cells[i])continue;return{x:client.cells[i].position.x/client.cells.length,y:client.cells[i].position.y/client.cells.length}}}function scanNodeCount(quad){var count=0;for(var i=0;i<quad.childNodes.length;i++)count+=scanNodeCount(quad.childNodes[i]);return 1+count}function scanItemCount(quad){var count=0;for(var i=0;i<quad.childNodes.length;i++)count+=scanItemCount(quad.childNodes[i]);return quad.items.length+count};
